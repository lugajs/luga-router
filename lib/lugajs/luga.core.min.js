/*! 
luga-core 0.3.0 2016-07-06T11:17:53.046Z
Copyright 2015-2016 Massimo Foti (massimo@massimocorner.com)
Licensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0
 */
if("undefined"==typeof luga)var luga={};!function(){"use strict";luga.namespace=function(ns,rootObject){var parts=ns.split(".");void 0===rootObject&&(rootObject=window||globals);for(var i=0;i<parts.length;i++)void 0===rootObject[parts[i]]&&(rootObject[parts[i]]={}),rootObject=rootObject[parts[i]];return rootObject},luga.namespace("luga.core"),luga.core.version="0.3.0",luga.extend=function(baseFunc,func,args){baseFunc.apply(func,args)},luga.isArray=function(obj){return Array.isArray(obj)},luga.isFunction=function(obj){return"function"===luga.type(obj)},luga.isPlainObject=function(obj){if("[object Object]"!==Object.prototype.toString.call(obj))return!1;var proto=Object.getPrototypeOf(obj);if(null===proto)return!0;var constructor=Object.prototype.hasOwnProperty.call(proto,"constructor")&&proto.constructor;return typeof("function"===constructor)&&Function.toString.call(constructor)===Function.toString.call(Object)},luga.lookupFunction=function(path){if(!path)return void 0;var reference=luga.lookupProperty(window,path);return luga.isFunction(reference)===!0?reference:void 0},luga.lookupProperty=function(object,path){if(!object||!path)return void 0;if(void 0!==object[path])return object[path];for(var parts=path.split(".");parts.length>0;){var part=parts.shift();if(void 0!==object[part]){if(0===parts.length)return object[part];object=object[part]}}return void 0},luga.merge=function(target,source){for(var x in source)source.hasOwnProperty(x)===!0&&(target[x]=source[x])},luga.setProperty=function(object,path,value){for(var parts=path.split(".");parts.length>0;){var part=parts.shift();void 0!==object[part]?object=object[part]:parts.length>0?(object[part]={},object=object[part]):object[part]=value}};var class2type={};["Array","Boolean","Date","Error","Function","Number","Object","RegExp","String","Symbol"].forEach(function(element,i,collection){class2type["[object "+element+"]"]=element.toLowerCase()}),luga.type=function(obj){if(null===obj)return"null";var rawType=typeof obj;if("object"===rawType||"function"===rawType){var stringType=Object.prototype.toString.call(obj);return class2type[stringType]}return rawType}}(),function(){"use strict";luga.namespace("luga.string"),luga.string.demoronize=function(str){return str=str.replace(new RegExp(String.fromCharCode(710),"g"),"^"),str=str.replace(new RegExp(String.fromCharCode(732),"g"),"~"),str=str.replace(new RegExp(String.fromCharCode(8216),"g"),"'"),str=str.replace(new RegExp(String.fromCharCode(8217),"g"),"'"),str=str.replace(new RegExp(String.fromCharCode(8220),"g"),'"'),str=str.replace(new RegExp(String.fromCharCode(8221),"g"),'"'),str=str.replace(new RegExp(String.fromCharCode(8211),"g"),"-"),str=str.replace(new RegExp(String.fromCharCode(8212),"g"),"--"),str=str.replace(new RegExp(String.fromCharCode(8218),"g"),","),str=str.replace(new RegExp(String.fromCharCode(8222),"g"),",,"),str=str.replace(new RegExp(String.fromCharCode(8226),"g"),"*"),str=str.replace(new RegExp(String.fromCharCode(8230),"g"),"...")},luga.string.format=function(str,args){var pattern=null;if(luga.isArray(args)===!0)for(var i=0;i<args.length;i++)pattern=new RegExp("\\{"+i+"\\}","g"),str=str.replace(pattern,args[i]);if(luga.isPlainObject(args)===!0)for(var x in args)args.hasOwnProperty(x)===!0&&(pattern=new RegExp("\\{"+x+"\\}","g"),str=str.replace(pattern,args[x]));return str},luga.string.queryToHash=function(str){var map={};if("?"===str.charAt(0)&&(str=str.substring(1)),0===str.length)return map;for(var parts=str.split("&"),i=0;i<parts.length;i++){var tokens=parts[i].split("="),fieldName=decodeURIComponent(tokens[0]),fieldValue="";2===tokens.length&&(fieldValue=decodeURIComponent(tokens[1])),void 0===map[fieldName]?map[fieldName]=fieldValue:luga.isArray(map[fieldName])===!0?map[fieldName].push(fieldValue):map[fieldName]=[map[fieldName],fieldValue]}return map};var propertyPattern=new RegExp("\\{([^}]*)}","g");luga.string.populate=function(str,obj){if(luga.isPlainObject(obj)===!0)for(var results;null!==(results=propertyPattern.exec(str));){var property=luga.lookupProperty(obj,results[1]);if(void 0!==property){var pattern=new RegExp(results[0],"g");str=str.replace(pattern,property),propertyPattern.test(str)}}return str}}(),function(){"use strict";luga.NOTIFIER_CONST={ERROR_MESSAGES:{NOTIFIER_ABSTRACT:"It's forbidden to use luga.Notifier directly, it must be used as a base class instead",INVALID_OBSERVER_PARAMETER:"addObserver(): observer parameter must be an object",INVALID_DATA_PARAMETER:"notifyObserver(): data parameter is required and must be an object"}},luga.Notifier=function(){if(this.constructor===luga.Notifier)throw luga.NOTIFIER_CONST.ERROR_MESSAGES.NOTIFIER_ABSTRACT;this.observers=[];var prefix="on",suffix="Handler",generateMethodName=function(eventName){var str=prefix;return str+=eventName.charAt(0).toUpperCase(),str+=eventName.substring(1),str+=suffix};this.addObserver=function(observer){if("object"!==luga.type(observer))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_OBSERVER_PARAMETER;this.observers.push(observer)},this.notifyObservers=function(eventName,data){if("object"!==luga.type(data))throw luga.NOTIFIER_CONST.ERROR_MESSAGES.INVALID_DATA_PARAMETER;for(var method=generateMethodName(eventName),i=0;i<this.observers.length;i++){var observer=this.observers[i];observer[method]&&luga.isFunction(observer[method])&&observer[method](data)}},this.removeObserver=function(observer){for(var i=0;i<this.observers.length;i++)if(this.observers[i]===observer){this.observers.splice(i,1);break}}}}();
//# sourceMappingURL=luga.core.min.js.map
