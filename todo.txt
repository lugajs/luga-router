DOCS:

- Multiple router instances are possible (explain the implications)

- Priority rely on order of registration. RouteHandlers are processed from top to bottom, the first match win.
  If no match is found, nothing happens
- Greedy mode allows multiple routeHandlers matching (false by default). Less efficient

- routeContext properties: fragment, payload

- Integration with luga.history

- Router.add() is overloaded, explain signatures
- Path can only be strings, RexExp aren't allowed

-------------

ROUTER:

- Router.onPopstate(): implement and test
  Retrieve state object (if any, created by pushState) to be passed along the route context

- Expose events notification (routeEnter, routeExit)


- Use Crossroad-like syntax for paths, closer to Spring MVC and .NET MVC
  https://millermedeiros.github.io/crossroads.js/#crossroads-add_route
  Express's syntax for patterns is too ambiguous, pretty much RegExp:  http://expressjs.com/en/guide/routing.html

- Static utilities:
  luga.router.compilePath(path) compiles route paths into RegExp

- Parameters and as many useful data to be passed along the route context

-------------

FUTURE:

- In order to stay isomorphic we can't read HTTP method (Like Spring or .MET MVC)
  We can't handle HTTP headers too (other libraries don't either)
  Should we provide a mechanism for Node.js?

- Router.add() create instances of luga.RouteHandler by default, make this configurable?