<div class="panel panel-default">
	<div class="panel-heading">Getting started</div>
	<div class="panel-body">
		<p>
			Include the JavaScript files. First jQuery, then <a href="../lib/lugajs/luga.common.min.js">Luga Common</a>,
			then <a href="../dist/luga.router.min.js">Luga Router</a> (in this order)
		</p>

<pre><code class="language-markup">&lt;script src="js/jquery.min.js"&gt;&lt;/script&gt;
&lt;script src="js/luga.common.min.js"&gt;&lt;/script&gt;
&lt;script src="js/luga.router.min.js"&gt;&lt;/script&gt;
</code></pre>
<pre><code class="language-javascript">var myRouter = new luga.router.Router();

// This function will be invoked whenever the associated path will be matched
var myCallback= function(context){
	console.log(context.params.section);
};

// Add some routes
myRouter.add("{section}/:page:", myCallback);
myRouter.add("{section}/", myCallback);

// Tell the router to start listening to hashChange events
myRouter.start();

// Programmatically trigger an hash change to test the router
location.hash = "first/test"; // => log "first" inside the console
</code></pre>
	</div>
</div>

<div class="panel panel-default">
	<div class="panel-heading">Matching routes</div>
	<div class="panel-body">
		<p>
			The router search for routes matching the given fragment based on their priority.
			Priority rely on order of registration, routes are processed from top to bottom, the first match win.
			In the example above both routes match the "first/test" fragment, yet only the one registered first is resolved
		</p>
		<p>
			If you want every possible matching route to be resolved, you can configure your router to be <a href="#router/greedy">greedy</a>
		</p>
		<p>
			If no match is found among the currently registered routes, nothing happens.
			Often it may be useful to add for last a route as less restrictive as possible, to act as a fallback if no other route get matched
		</p>
	</div>
</div>

<div class="alert alert-info" role="alert">
	<strong>Heads up!</strong>
	<p>
		Unlike other libraries, luga.router doesn't enforce the <a href="https://en.wikipedia.org/wiki/Singleton_pattern">Singleton pattern</a>,
		you are allowed to have multiple instances of luga.router.Router running at the same time.
		This means that, potentially, more than one router may react to the same url/fragment.
	</p>
	<p>
		We consider this a very powerful feature that allow plenty of extra flexibility, you can, for example, split you application in multiple modules and each of them can handle its routing needs.
		Yet it require extra care because it gives you additional ways to hurt yourself.
	</p>
</div>