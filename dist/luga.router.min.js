/*! 
luga-router 0.1.0 2016-07-23T14:16:30.904Z
Copyright 2015-2016 Massimo Foti (massimo@massimocorner.com)
Licensed under the Apache License, Version 2.0 | http://www.apache.org/licenses/LICENSE-2.0
 */
if("undefined"==typeof luga)throw"Unable to find Luga JS Core";!function(){"use strict";luga.namespace("luga.router"),luga.router.version="0.1.0",luga.router.isValidRouteHandler=function(obj){return"object"===luga.type(obj)&&"string"===luga.type(obj.path)&&"function"===luga.type(obj.enter)&&"function"===luga.type(obj.exit)&&"function"===luga.type(obj.match)?!0:!1}}(),function(){"use strict";luga.router.Router=function(options){var CONST={ERROR_MESSAGES:{INVALID_ROUTE:"luga.router.Router: Invalid route passed to .add() method",DUPLICATE_ROUTE:"luga.router.Router: Duplicate route, path {0} already specified"}};luga.extend(luga.Notifier,this);var config={rootPath:"",greedy:!1};luga.merge(config,options);var self=this,routeHandlers=[];this.add=function(path,enterCallBack,exitCallBack,payload){if(1===arguments.length&&"object"===luga.type(arguments[0])){if(luga.router.isValidRouteHandler(arguments[0])!==!0)throw CONST.ERROR_MESSAGES.INVALID_ROUTE;addHandler(arguments[0])}};var addHandler=function(route){if(void 0!==self.getByPath(route.path))throw luga.string.format(CONST.ERROR_MESSAGES.DUPLICATE_ROUTE,[route.path]);routeHandlers.push(route)};this.getAll=function(){return routeHandlers},this.getByPath=function(path){return routeHandlers.find(function(element,index,array){return element.path===path})},this.getMatch=function(fragment){return config.greedy===!1?routeHandlers.find(function(element,index,array){return element.match(fragment)===!0}):routeHandlers.filter(function(element,index,array){return element.match(fragment)===!0})},this.setup=function(options){return luga.merge(config,options),config},this.start=function(){void 0!==window&&(window.addEventListener("hashchange",self.onHashChange,!1),window.addEventListener("popstate",self.onPopstate,!1))},this.stop=function(){void 0!==window&&(window.removeEventListener("hashchange",self.onHashChange,!1),window.removeEventListener("popstate",self.onPopstate,!1))},this.onHashChange=function(){},this.onPopstate=function(){}}}(),function(){"use strict";luga.router.RouteHandler=function(options){var config={path:"",enterCallBacks:[],exitCallBacks:[],payload:void 0};luga.merge(config,options);this.path=config.path,this.enter=function(){config.enterCallBacks.forEach(function(element,i,collection){element.apply(null,[])})},this.exit=function(){config.exitCallBacks.forEach(function(element,i,collection){element.apply(null,[])})},this.match=function(fragment){return fragment===config.path}}}();
//# sourceMappingURL=luga.router.min.js.map
